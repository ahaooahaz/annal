set -a

#############
# Functions #
#############

# wrapper for source and eval.
function include() {
    case $1 in
    -f)
        [[ -f $2 ]] && source $2
        ;;
    -c)
        local output=$($=2) &>/dev/null && eval $output
        ;;
    *)
        echo 'Unknown argument!' >&2
        return 1
        ;;
    esac
}

# Proxy utils is depend on polipo and protocol sock5.
function proxy() {
    case $1 in
    on)
        export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"
        export http_proxy="http://127.0.0.1:8123"
        export https_proxy=$http_proxy
        export ftp_proxy=$http_proxy
        export rsync_proxy=$http_proxy
        export HTTP_PROXY=$http_proxy
        export HTTPS_PROXY=$http_proxy
        export FTP_PROXY=$http_proxy
        export RSYNC_PROXY=$http_proxy
    ;;
    off)
        unset no_proxy
        unset http_proxy
        unset https_proxy
        unset ftp_proxy
        unset rsync_proxy
        unset HTTP_PROXY
        unset HTTPS_PROXY
        unset FTP_PROXY
        unset RSYNC_PROXY
    ;;
    -h|--help)
        cat << EOF
Usage: ${0##*/} [-h|--help]
    -h|--help   show help
    on          proxy enable
    off         proxy disable
EOF
    ;;
    *)
        proxy on
        $@
        proxy off
    ;;
    esac
}

# Skip git large storage files in go modules.
function skiplfs() {
    case $1 in
    on)
        export GIT_LFS_SKIP_SMUDGE=1
    ;;
    off)
        unset GIT_LFS_SKIP_SMUDGE
    ;;
    *)
        cat << EOF
Usage: ${0##*/} [-h|--help]
    on  "git modules skip lfs files"
    off "git modules not skip lfs files"
EOF
    ;;
    esac
}

function isnum() {
    if [ $# -ne 1 ]; then
        return 1
    fi

    expr $1 "+" 10 &> /dev/null
    if [ $? -ne 0 ];then
        return 1
    fi

    return 0
}

function ssht () {
    ssh -t "$@" "tmux attach || tmux new"
}

set +a

#######
# ENV #
#######

export XDG_CONFIG_HOME=~/.config
export XDG_CACHE_HOME=~/.cache
export XDG_DATA_HOME=~/.local/share

# runtime env.
export PATH="$HOME/.local/bin:$GOPATH/bin:$HOME/.cargo/bin:$PATH"
export LD_LIBRARY_PATH="$HOME/.local/lib:$LD_LIBRARY_PATH"

# C/C++ env.
export C_INCLUDE_PATH="$HOME/.local/include:$C_INCLUDE_PATH"
export CPLUS_INCLUDE_PATH=$C_INCLUDE_PATH
export LIBRARY_PATH=$LD_LIBRARY_PATH
export PKG_CONFIG_PATH="$HOME/.local/lib/pkgconfig:$PKG_CONFIG_PATH"

# Golang env.
ZGOPATH="$HOME/dev/go"
if [[ -s "$HOME/.gvm/scripts/gvm" ]]; then
    source "$HOME/.gvm/scripts/gvm" && unset -f cd
    set -a
    function gouse() {
        gvm use $1 --default
        export GOPATH=$ZGOPATH
    }
    set +a
else
    export GOROOT=$HOME/.local/dev/go
fi
export GOPATH=$ZGOPATH

# Lua env.
export LUA_LOCAL_PATH=$HOME/.luarocks
export LUA_PATH="$LUA_LOCAL_PATH/share/lua/5.1/?.lua;$LUA_LOCAL_PATH/share/lua/5.1/?/?.lua;;"

export GPG_TTY=$(tty)

# input env.
export GIT_EDITOR=nvim
export EDITOR=nvim
export VISUAL=nvim
export INPUT_METHOD=ibus
export GLFW_IM_MODULE=ibus
export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus

# private env.
include -f ${HOME}/.inti_envrc

#########
# Alias #
#########

alias l='exa -lh --group-directories-first --git --time-style=long-iso'
alias ls='ls --color=auto'

alias v=nvim
alias vi=nvim
alias vim=nvim
alias say=spd-say
alias t=tmux

alias kubectx='kubectl config use-context '

alias kcat='kitty +kitten icat'
alias kssh='kitty +kitten ssh'
alias kdiff='kitty +kitten diff'

alias open='xdg-open'
alias grep='grep --color=auto'
alias watch='watch ' # enable alias commands
alias sudo='sudo ' # enable alias commands
